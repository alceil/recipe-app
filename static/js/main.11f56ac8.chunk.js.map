{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","inputRef","useRef","searchForRecipe","query","setLoading","url","fetch","node","then","response","json","res","setIngredientsList","hits","console","log","catch","err","useState","ingredientsList","loading","useEffect","className","ref","placeholder","type","onClick","current","value","map","recipe","label","image","ingredientLines","src","step","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MA2EeA,MAvEf,WACE,IAAMC,EAAWC,iBAAO,MAOpBC,EAAgB,SAACC,GAErBC,GAAW,GACX,IAAMC,EAAG,0CAAqCF,EAArC,6DACTG,MAAMD,EAAI,CAACE,KAAK,aACfC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UAAQF,MAAK,SAAAG,GACpCC,EAAmBD,EAAIE,MACvBT,GAAW,GACXU,QAAQC,IAAIJ,MAEbK,OAAM,SAAAC,GAEHH,QAAQC,IAAI,QAAQE,GACpBb,GAAW,OAGjB,EAA2Cc,mBAAS,IAApD,mBAAOC,EAAP,KAAuBP,EAAvB,KACA,EAA2BM,oBAAS,GAApC,mBAAOE,EAAP,KAAehB,EAAf,KAQE,OAPAiB,qBAAU,WAERnB,EAAgB,aAChB,IAKA,qBAAKoB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,sBAAKA,UAAU,eAAf,UACE,uBAAOC,IAAKvB,EAAUwB,YAAa,oBAAoBC,KAAK,SAC5D,wBAAQC,QAnCL,WACXxB,EAAgBF,EAAS2B,QAAQC,OACjC5B,EAAS2B,QAAQC,MAAM,IAiCf,uBAGF,8BACGR,GAAU,6CAEb,qBAAKE,UAAU,UAAf,SACGH,EAAgBU,KAAI,YAAa,IAAXC,EAAU,EAAVA,OACdC,EAA6BD,EAA7BC,MAAMC,EAAuBF,EAAvBE,MAAMC,EAAiBH,EAAjBG,gBACnB,OACE,sBAAkBX,UAAU,aAA5B,UACE,+BACGS,IAEnB,qBAAKG,IAAKF,IAEV,qBAAKV,UAAU,QAAf,SACCW,EAAgBJ,KAAI,SAACM,EAAKC,GAE3B,OAAO,4BAAgBD,GAARC,UATUL,cCxCVM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.11f56ac8.chunk.js","sourcesContent":["import './App.css';\nimport {useEffect,useState,useRef} from 'react'\n\n\nfunction App() {\n  const inputRef = useRef(null)\n\nconst search=()=>{\n  searchForRecipe(inputRef.current.value)\n  inputRef.current.value=''\n}\n\nconst searchForRecipe=(query)=>\n{\n  setLoading(true)\n  const url =`https://api.edamam.com/search?q=${query}&app_id=2ef4d7db&app_key=25bbb9dec73ce7e1fe43163d963fe3b4`;\n  fetch(url,{node:\"nno-cors\"})\n  .then(response=>response.json()).then(res=>{\n    setIngredientsList(res.hits)\n    setLoading(false)\n    console.log(res)\n  })\n  .catch(err=>\n    {\n      console.log(\"error\",err)\n      setLoading(false)\n    });\n}\nconst [ingredientsList,setIngredientsList]=useState([]);\nconst [loading,setLoading]=useState(false);\n  useEffect(()=>\n  {\n    searchForRecipe('chicken')\n  },[]);\n\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"inputWrapper\">\n          <input ref={inputRef} placeholder =\"Search for recipe\" type=\"text\" />\n          <button onClick={search}>Search</button>\n        </div>\n\n        <div>\n          {loading&& <p>Loading...</p>  }\n        </div>\n        <div className=\"Wrapper\">\n          {ingredientsList.map(({recipe})=>{\n            const {label,image,ingredientLines}=recipe\n            return(\n              <div key ={label} className=\"Ingredient\">\n                <span>\n                  {label}\n                </span>\n<img src={image}  />\n\n<div className=\"steps\">\n{ingredientLines.map((step,index)=>{\n\nreturn <p key={index}>{step}</p>\n})}\n</div>\n\n              </div>\n            )\n          })}\n\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}